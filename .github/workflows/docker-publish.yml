name: Docker Build for Different Environments

on:
  push:
    branches:
      - dev
      - qa
      - main  # Assuming 'main' is used for prod

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.2.0

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to Docker Hub
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD}}

    - name: Set Docker image tag based on branch
      id: set_tag
      run: |
        if [[ $GITHUB_REF == 'refs/heads/dev' ]]; then
          echo "IMAGE_TAG=dev" >> $GITHUB_ENV
        elif [[ "$GITHUB_REF" == "refs/heads/qa" ]]; then
          echo "IMAGE_TAG=qa" >> $GITHUB_ENV
        elif [[ $GITHUB_REF == 'refs/heads/main' ]]; then
          echo "IMAGE_TAG=prod" >> $GITHUB_ENV
        fi

    - name: Build and push Docker image
      uses: docker/build-push-action@v6.15.0
      with:
        context: .  # Use the current directory as the build context
        push: true  # Push the image to Docker Hub after building
        tags: tgonz67/cadooga-text-crawler:${{ env.IMAGE_TAG }}  # Use the appropriate Docker image and tag
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        
    # Move cache to avoid growing it indefinitely
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache